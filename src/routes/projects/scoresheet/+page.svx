<script lang="ts">
  import Seo from '$components/Seo.svelte';
  import Logos from "$components/Logos.svelte"
  import ProjectBtnLink from "$components/ProjectBtnLink.svelte"
  let logos = [
    "Figma",
    "Bootstrap",
    "SvelteKit",
    "TypeScript",
  ]
</script>

<Seo title="Scoresheet App" hideHeader />

# Scoresheet App

In my family, card games were a staple growing up—but keeping score was always a hassle. We'd scramble for scratch paper, argue over math, and usually pass the task to some unlucky player. I built Scoresheet to solve that problem: an easy-to-use app that automates scorekeeping and works anywhere, even offline.

## Project Goals

- Prioritize a mobile-first, tap-friendly interface.
- Make the app installable as a Progressive Web App (PWA).
- Ensure offline functionality using local storage and service workers.
- Avoid any need for user accounts or backends.
- Keep it simple enough that anyone could start using it in seconds.
- Provide a free experience, without ads.

## From Prototype to MVP

I started by creating wireframes and mockups in Figma. Once I had a clear flow, I shared the prototype with family members to see whether it would actually be useful in real game sessions. I implemented additional features based their feedback, and I moved on to development.

<img src="/images/optimized/projects/scoresheet/lg_screenshot-mockup.png" alt="Scoresheet Mockup" />

## Tech Stack and Implementation

Version 1 of Scoresheet lasted a few years and was used by a handful of people. There were some features and design changes that needed to be made, as well as upgrading from Svelte 3 to Svelte 5. I did some more redesign and got additional feedback before starting working on the current version, v2.0.

Key tech choices:
- **Svelte & SvelteKit** 
- **Bootstrap** for consistent, lightweight UI components
- **Figma** for quick prototyping
- **Service workers** for offline support
- **Localstorage** for persisting game state without a backend

## Iteration and Design System

In version 2, I refactored the app using a personal design system and component library—many of which are shared across this portfolio. This improved consistency and reduced redundant development. I also began migrating parts of the app to Svelte 5 to explore its new reactivity model and optimize component structure.

<img src="/images/optimized/projects/scoresheet/lg_screenshot.png" alt="Scoresheet Mockup on a Phone" />

## Results

Scoresheet has become a go-to app for family game nights. It’s simple, fast, and works offline—exactly what I set out to build. I'm hoping to share this app with more people to see what additional features, if any are needed to make game night a more enjoyable experience.

<ProjectBtnLink href="https://scoresheet.nathanblaylock.com">Visit Scoresheet App</ProjectBtnLink>

<Logos {logos} />